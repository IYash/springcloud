server:
  port: 8767

spring:
  application:
    name: securityserver
  cloud:
    client:
      ip-address: 127.0.0.1
  thymeleaf:
    cache: false
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 10
      max-active: 100
      min-idle: 10
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      test-on-borrow: false
      test-on-return: false
      test-while-idle: true
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 30000
      filters: stat
    url: jdbc:postgresql://127.0.0.1:5432/test
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: 123456
    jpa:
      hibernate:
        ddl-auto: update
  redis:
    host: localhost
    port: 6379
    password:


#  main:
#    allow-bean-definition-overriding: true

logging:
  level:
    org.springframework.http.server.reactive: debug
    org.springframework.web.reactive: debug
    reactor.ipc.netty: debug
eureka:
  instance:
    prefer-ip-address: true #是否以ip注册到注册中心，默认是hostname
    instance-id: ${spring.cloud.client.ip-address}:${server.port} #注册限制的实例id
  client:
    register-with-eureka: false # 是否注册到Eureka Server
    fetch-registry: false # 是否从Eureka Server获取注册信息，单点-false，集群-true
    serviceUrl:
      defaultZone: http://127.0.0.1:8761/eureka/ #指定注册中心地址


#context:
#  initializer:
#    classes: com.clnn.security.db.component.SecurityInitializer

